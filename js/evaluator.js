/*
  The evaluator accepts the parse tree generated by the parser,
  evaluates each item, and produces the evaluated output.
*/

var _ = require('../bower_components/lodash/dist/lodash');
var l = function(c) {
    console.log(c)
}
var nativeFunctions = {
    concat: function(args) {
        return args + ".concat(" + args + ")"
    }
}
var throwIfFalse = function(test, msg) {
    if (!test) {
        throw msg
    }
    return test
}

exports.eval = function(tree) {
    var evalLeaf = function(leaf) {
        if (!leaf.type)
            return leaf;

        if (leaf.type === 'expression') {
            return throwIfFalse(nativeFunctions[evalLeaf(leaf.body[0])], 'No function by the name of ' + leaf.body[0])(evalLeaf(leaf.body[2]))
        }
    }
    return evalLeaf(tree[0])
}
